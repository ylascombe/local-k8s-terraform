apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: tools
  namespace: argocd-system
spec:
  # TODO change me
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: '*'
    server: '*'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - https://github.com/ylascombe/local-k8s-terraform
  - %{ if ingress_controller_type == "kong" }https://charts.konghq.com%{ else }https://github.com/kubernetes/ingress-nginx/%{ endif }
---
%{ if ingress_controller_type == "kong" }
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-kong
  namespace: argocd-system
spec:
  destination:
    namespace: ingress-kong
    server: https://kubernetes.default.svc
  project: tools
  source:
    path: helm/kong
    repoURL: 'https://github.com/ylascombe/local-k8s-terraform'
    targetRevision: main
    helm:
      valueFiles:
        - values.yaml
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      prune: true
%{ endif }
%{ if ingress_controller_type == "nginx" }
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
  namespace: argocd-system
spec:
  destination:
    name: ''
    namespace: ingress-nginx
    server: 'https://kubernetes.default.svc'
  source:
    path: deploy/static/provider/kind
    repoURL: 'https://github.com/kubernetes/ingress-nginx/'
    targetRevision: HEAD
  project: tools
  syncPolicy:
    automated:
      prune: true
%{ endif }
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd-system
spec:
  destination:
    name: ''
    namespace: cert-manager
    server: 'https://kubernetes.default.svc'
  source:
    path: helm/cert-manager
    repoURL: 'https://github.com/ylascombe/local-k8s-terraform'
    targetRevision: main
    helm:
      valueFiles:
        - values.yaml
  project: tools
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      prune: false
      selfHeal: false
